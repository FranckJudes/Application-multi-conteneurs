name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/todo-api:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: |
        cd terraform
        terraform init
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}

    - name: Terraform Apply
      id: terraform
      run: |
        cd terraform
        terraform apply -auto-approve
      env:
        TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
        TF_VAR_ssh_key_fingerprint: ${{ secrets.SSH_KEY_FINGERPRINT }}

    - name: Get Server IP
      id: server_ip
      run: |
        cd terraform
        echo "SERVER_IP=$(terraform output -raw server_ip)" >> $GITHUB_ENV

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Install Ansible
      run: |
        sudo apt-add-repository --yes --update ppa:ansible/ansible
        sudo apt install ansible -y

    - name: Run Ansible Playbook
      run: |
        cd ansible
        ansible-playbook -i inventory.yml playbook.yml -e "server_ip=${{ env.SERVER_IP }} ssh_private_key_path=~/.ssh/id_rsa"
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
